public abstract class Course
{
    public int CourseId { get; set; }
    public string Title { get; set; }
    public abstract void Subscribe(Student std);
    public abstract string GetCourseDetails();
}

public class OnlineCourse : Course
{
    public override void Subscribe(Student std)
    {
        // Lógica para suscribirse a un curso en línea
        Console.WriteLine($"Student {std.Name} subscribed to online course {Title}");
    }

    public override string GetCourseDetails()
    {
        return $"Online Course: {Title}, Course ID: {CourseId}";
    }
}

public class OfflineCourse : Course
{
    public override void Subscribe(Student std)
    {
        // Lógica para suscribirse a un curso presencial
        Console.WriteLine($"Student {std.Name} subscribed to offline course {Title}");
    }

    public override string GetCourseDetails()
    {
        return $"Offline Course: {Title}, Course ID: {CourseId}";
    }
}

public class Student
{
    public string Name { get; set; }

    public Student(string name)
    {
        Name = name;
    }





//implementacion

public abstract class Course
{
    public int CourseId { get; set; }
    public string Title { get; set; }
    public abstract void Subscribe(Student std);
    public abstract string GetCourseDetails();
}

public class OnlineCourse : Course
{
    public override void Subscribe(Student std)
    {
        // Lógica para suscribirse a un curso en línea
        Console.WriteLine($"Student {std.Name} subscribed to online course {Title}");
    }

    public override string GetCourseDetails()
    {
        return $"Online Course: {Title}, Course ID: {CourseId}";
    }
}

public class OfflineCourse : Course
{
    public override void Subscribe(Student std)
    {
        // Lógica para suscribirse a un curso presencial
        Console.WriteLine($"Student {std.Name} subscribed to offline course {Title}");
    }

    public override string GetCourseDetails()
    {
        return $"Offline Course: {Title}, Course ID: {CourseId}";
    }
}

public class HybridCourse : Course
{
    public override void Subscribe(Student std)
    {
        // Lógica para suscribirse a un curso híbrido
        Console.WriteLine($"Student {std.Name} subscribed to hybrid course {Title}");
    }

    public override string GetCourseDetails()
    {
        return $"Hybrid Course: {Title}, Course ID: {CourseId}";
    }
}

public class Student
{
    public string Name { get; set; }

    public Student(string name)
    {
        Name = name;
    }
}


public class Program
{
    public static void Main(string[] args)
    {
        Student student = new Student("John Doe");

        Course onlineCourse = new OnlineCourse { CourseId = 1, Title = "Online Course 101" };
        Course offlineCourse = new OfflineCourse { CourseId = 2, Title = "Offline Course 101" };
        Course hybridCourse = new HybridCourse { CourseId = 3, Title = "Hybrid Course 101" };

        List<Course> courses = new List<Course> { onlineCourse, offlineCourse, hybridCourse };

        foreach (Course course in courses)
        {
            course.Subscribe(student);
            Console.WriteLine(course.GetCourseDetails());
        }
    }
}




